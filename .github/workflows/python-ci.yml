name: Python Continuous Integration
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
permissions:
  contents: read
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11.1"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --user pipenv
    - name: Format with Black
      run: |
        pipenv install --dev
        pipenv run black train
        pipenv run black train --check
    - name: Lint with flake8
      run: |
        pipenv install --dev
        pipenv run flake8 .
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11.1"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --user pipenv
    - name: Build packages
      run: |
         python -m pip install --upgrade pip
         python -m pip install --upgrade setuptools wheel
        
         cwd=$(pwd)
        
         # Generate Hash of files in package and inject it in version.py then build package
         PACKAGES_HASH_CLEAN=$(python ./bin/directory_hash.py ./packages/extraction)
         cd packages/extraction     
         echo 'VERSION = "'$PACKAGES_HASH_CLEAN'"' > version.py
         echo "build package with version $PACKAGES_HASH_CLEAN"
         python setup.py sdist bdist_wheel
         cd cwd
         
         # Update package version in env files
         python ./bin/replace_in_file.py ./train/extraction/Pipfile "{file = \"./packages/mlopspython_extraction-0.0.0-py3-none-any.whl\"}" "\"===$PACKAGES_HASH_CLEAN\""
         python ./bin/replace_in_file.py ./train/extraction/environment.conda.yaml ./packages/mlopspython_extraction-0.0.0-py3-none-any.whl "mlopspython-extraction===$PACKAGES_HASH_CLEAN"
    - name: Publish package extraction
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      continue-on-error: true
      with:
        packages_dir: packages/extraction/dist
        skip-existing: true
        verbose: true
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
    - name: Wait 10 seconds
      run: |
        sleep 10
    - name: Run unit tests Extraction
      working-directory: train/extraction
      run: |
        pipenv install --dev
        pipenv run coverage run -m unittest tests.extraction_test
        pipenv run coverage report
    - name: Run unit tests Label Split Data
      working-directory: train/label_split_data
      run: |
        pipenv install --dev
        pipenv run coverage run -m unittest tests.label_split_data_test
        pipenv run coverage report
    - name: Run unit tests Train
      working-directory: train/train
      run: |
        pipenv install --dev
        pipenv run python -m unittest tests.train_test
    - name: Build packages
      run: |
         python -m pip install --upgrade pip
         python -m pip install --upgrade setuptools wheel
         PACKAGES_HASH_CLEAN=$(python ./bin/directory_hash.py ./packages/inference)
         # For Pipenv build mlopspython-inference-0.0.0-py3-none-any.whl then copy it to train/evaluate/packages
         cd packages/inference
         #python setup.py sdist bdist_wheel
         #cd dist/
         #cp *.whl ../../../train/evaluate/packages/
         #cd ../
         #rm -rf dist/
        
         # Generate Hash of files in package and inject it in version.py then build package
         #PACKAGE_HASH=$(find . -type f -exec md5sum {} + | LC_ALL=C sort | md5sum)
         #PACKAGE_HASH_FINAL=$(echo $PACKAGE_HASH | sed 's/[ *-]//g')
         #PACKAGES_HASH_CLEAN=$(echo $PACKAGE_HASH_FINAL | sed 's/[^0-9]*//g')
        
         
         echo 'VERSION = "'$PACKAGES_HASH_CLEAN'"' > version.py
         echo "build package with version $PACKAGES_HASH_CLEAN"
         python setup.py sdist bdist_wheel
         echo "remove *.egg-info"
         find . -type d -name "*.egg-info" -print0 | xargs -0 /bin/rm -rf "{}"
         cd ../../
         
         # Update package version in environment.conda.yaml
         python ./bin/replace_in_file.py ./train/evaluate/Pipfile "{file = \"./packages/mlopspython_inference-0.0.0-py3-none-any.whl\"}" "\"===$PACKAGES_HASH_CLEAN\""
         python ./bin/replace_in_file.py ./train/evaluate/environment.conda.yaml ./packages/mlopspython_inference-0.0.0-py3-none-any.whl "mlopspython-inference===$PACKAGES_HASH_CLEAN"
         #cd train/evaluate
         #key="./packages/mlopspython-inference-0.0.0-py3-none-any.whl"
         #escappedKey=$(printf '%s\n' "$key" | sed -e 's/[]\/$*.^[]/\\&/g');
         #value="mlopspython-inference==$PACKAGES_HASH_CLEAN"
         #escappedValue=$(printf '%s\n' "$value" | sed -e 's/[]\/$*.^[]/\\&/g');
         #sed -i "s/$escappedKey/$escappedValue/g" environment.conda.yaml

    - name: Publish package inference
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      continue-on-error: true
      with:
        packages_dir: packages/inference/dist
        skip-existing: true
        verbose: true
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
    - name: Wait 10 seconds
      run: |
        sleep 10
    - name: Run unit tests Evaluate
      working-directory: train/evaluate
      run: |
        pipenv install --dev
        pipenv run python -m unittest tests.evaluate_test
    - name: azure login
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZUREML_CREDENTIALS}}
    - name: run train/azure/run_pipeline.py.py
      run: |
          pipenv install
          pipenv run python azureml_run_pipeline.py
      working-directory: train
